# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Local {
  account: String!
  password: String!
}

type Line {
  _id: String!
  name: String!
}

type Facebook {
  _id: String!
  name: String!
  email: String!
}

type Google {
  _id: String!
  name: String!
  email: String!
}

"""當前用戶資料"""
type UserResponse {
  """用戶名稱"""
  name: String!

  """用戶類別"""
  type: UserType!

  """用戶頭像"""
  isVerified: Boolean!

  """用戶頭像"""
  avatar: String!
  createdAt: Date!
  updatedAt: Date!
}

enum UserType {
  BASIC
  ADMIN
}

"""Date custom scalar type"""
scalar Date

type Query {
  """Current user infomation【need login access-token】"""
  me: UserResponse!
}

type Mutation {
  createUser(input: createUserInput!): createUserResponse!
  verifyEmail(token: String!): verifyEmailResponse!
  resetPassword(input: resetPasswordInput!): resetPasswordResponse!

  """帳號登入"""
  login(input: loginUserInput!): LoginResponse!

  """Line登入, 未註冊則自動建立帳號"""
  oauthLine(token: String!): LoginResponse!

  """Faceboook登入, 未註冊則自動建立帳號"""
  oauthFacebook(token: String!): LoginResponse!

  """google登入, 未註冊則自動建立帳號"""
  oauthGoogle(token: String!): LoginResponse!
  sendVerifyEmail(input: sendEmailInput!): sendEmailResponse!
  sendForgetPasswordEmail(input: sendEmailInput!): sendEmailResponse!
}

union createUserResponse = UserResponse | createUserError

"""建立帳號異常"""
type createUserError {
  """異常訊息"""
  message: String!
}

"""建立帳號參數"""
input createUserInput {
  """帳號, 格式為5~10字元"""
  account: String!

  """長度為10"""
  password: String!

  """長度為10"""
  name: String!
}

union verifyEmailResponse = UserResponse | verifyEmailError

"""驗證Email異常"""
type verifyEmailError {
  """異常訊息"""
  message: String!
}

union resetPasswordResponse = UserResponse | resetPasswordError

"""重設密碼異常"""
type resetPasswordError {
  """異常訊息"""
  message: String!
}

"""重設密碼參數"""
input resetPasswordInput {
  """長度為10"""
  newPassword: String!

  """長度為10"""
  token: String!
}

union LoginResponse = AuthTokens | LoginError

type AuthTokens {
  accessToken: String!
  refreshToken: String!
}

type LoginError {
  message: String!
}

input loginUserInput {
  account: String!
  password: String!
}

union sendEmailResponse = EmailResponse | sendEmailError

type EmailResponse {
  email: String!
}

type sendEmailError {
  message: String!
}

input sendEmailInput {
  email: String!
}
